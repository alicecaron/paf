<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:DC="http://purl.org/metadata/dublin_core_elements#" xml:lang="en" lang="en">
<head>
    <meta name="DC.creator" content="David Decraene" />
	<meta name="DC.publisher" content="Ontology Online" />
    <meta name="Keywords" content="OWL, Ubiquity, jQuery, jOWL, ontology, semantic web"/>
    <meta name="Description" content="jOWL Ontology Browser, visualizes ontologies loaded with the ubiquity command 'view_ontology'"/>
    <title>jOWL Ontology Browser - Ubiquity</title>
	<link rel="stylesheet" href="http://ontologyonline.org/css/blueprint/screen.css" type="text/css" media="screen, projection"/>
	<link rel="stylesheet" href="css/jOWL.css" type="text/css"/>
	<link type="text/css" rel="stylesheet" href="css/jq/custom-theme/jquery-ui-1.7.custom.css"></link>
	<style type="text/css">
		img {border:0pt none;display:block}	

		/** custom widget settings */
		.jowl_link {text-decoration:underline;color:blue;cursor:pointer;}
		.jowl_tooltip {text-decoration:underline;color:steelblue;}
		#thingtooltip {border:0px;}
		.stats {text-align:right;font-size:smaller;}
		.resourcebox {text-align:left}
	</style>
	
    <script type="text/javascript" src="jquery_min.js"></script>
    <script type="text/javascript" src="jquery.js"></script>
	<script type="text/javascript" src="scripts/jquery.tooltip.js"></script>
	<script type="text/javascript" src="scripts/jOWL.js"></script>
	<script type="text/javascript" src="scripts/jOWL_UI.js"></script>
	<script type="text/javascript" src="scripts/jOWLBrowser.js"></script>
	
	<!--Script pour la visu d3-->
	<script type="text/javascript" src="d3.v3.js"></script>
    <script type="text/javascript" src="d3.layout.js"></script>
   
	<style type="text/css">
		.node rect {
		cursor: pointer;
		fill: #fff;
		fill-opacity: .5;
		stroke: #3182bd;
		stroke-width: 1.5px;
		}
		.node text {
		font: 10px sans-serif;
		pointer-events: none;
		}
		path.link {
		fill: none;
		stroke: #9ecae1;
		stroke-width: 1.5px;
		}
	</style>

    <script type="text/javascript">
/** 
Modify this configuration object to fine-tune the visualisation of the jOWL browser.
*/
	var configuration = {
		ontology : "data/Bloom_LRE.owl", //the ontology to load
		owlClass       : null, //The class to show when loading
		classOverview  : true, //show or hide the class overview list.
		propertiesTab  : true, //show or hide the properties panel
		individualsTab : true, //show or hide the individuals panel
		sparqldlTab    : true  //show or hide the sparq-dl panel
	}

/** 
Do not Modify the code below unless you know what you are doing.
*/
$(document).ready(function() {
	if(!configuration.propertiesTab) { $('#propertyPanel').remove();   $('#tab2').remove(); }
	if(!configuration.individualsTab){ $('#thingwidget').appendTo("body").hide(); $('#individualPanel').remove(); $('#tab3').remove(); }
	if(!configuration.sparqldlTab)   { $('#sparqldlPanel').remove();   $('#tab4').remove(); }

	$("#tabs").tabs();

	jOWL.load(configuration.ontology, initjOWL, {reason : true, locale : 'fr' });
});

function initjOWL(){

		createOntologyWidget();
		var conceptWidget = createConceptWidget();

		if(configuration.classOverview){
			jOWLBrowser.views.push({query: "Class(?x)", element : $('#classlist'), widget : conceptWidget}); 
			}

		if(configuration.propertiesTab){
			var propertyWidget = createPropertyWidget(); 
			jOWLBrowser.views.push({query: "ObjectProperty(?x)", element : $('#OPlist'), widget : propertyWidget});
			jOWLBrowser.views.push({query: "DatatypeProperty(?x)", element : $('#DPlist'), widget : propertyWidget});
			}

		if(configuration.individualsTab){
			var thingWidget = createIndividualsWidget();

			setTimeout(function(){//show individuals asynchronously
				var arr = new jOWL.Ontology.Array();
				for(key in jOWL.index('Thing')){
						arr.concat(jOWL.index('Thing')[key], true);
					}
				showOverviewResults(arr, $('#thinglist'), thingWidget);
			}, 200);
			
			}

		if(configuration.sparqldlTab){
			createSparqlDLWidget(); 
			}

		createOverviewWidget();
}
</script>
	</head>
	<body>
	<div id="d3visu" style="width:50%;float:left">
	    <div id="chart" style="width:80%;float:left;overflow:auto"></div>
    <div style="float:right;width:20%" id="info"></div>

	
<script type="text/javascript">
//script de la visu d3
var w = 500,
    h = 5000,
    i = 0,
    barHeight = 20,
    barWidth = w * .8,
    duration = 400,
    root;

var tree = d3.layout.tree()
    .size([h, 100]);

var diagonal = d3.svg.diagonal()
    .projection(function(d) { return [d.y, d.x]; });

var vis = d3.select("#chart").append("svg:svg")
    .attr("width", w)
    .attr("height", h)
  .append("svg:g")
    .attr("transform", "translate(20,30)");

d3.json("../../eclipse/workspace/paf/json/tt.json", function(json) {
  json.x0 = 0;
  json.y0 = 0;
  update(root = json);
});

function update(source) {

  // Compute the flattened node list. TODO use d3.layout.hierarchy.
  var nodes = tree.nodes(root);
  
  // Compute the "layout".
  nodes.forEach(function(n, i) {
    n.x = i * barHeight;
  });
  
  // Update the nodes
  var node = vis.selectAll("g.node")
      .data(nodes, function(d) { return d.id || (d.id = ++i); });
  
  var nodeEnter = node.enter().append("svg:g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + source.y0 + "," + source.x0 + ")"; })
      .style("opacity", 1e-6);

  // Enter any new nodes at the parent's previous position.
  nodeEnter.append("svg:rect")
      .attr("y", -barHeight / 2)
      .attr("height", barHeight)
      .attr("width", barWidth)
      .style("fill", color)
      .on("click", click);
  
  nodeEnter.append("svg:text")
      .attr("dy", 3.5)
      .attr("dx", 5.5)
      .text(function(d) { return d.name; });
  
  // Transition nodes to their new position.
  nodeEnter.transition()
      .duration(duration)
      .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })
      .style("opacity", 1);
  
  node.transition()
      .duration(duration)
      .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })
      .style("opacity", 1)
    .select("rect")
      .style("fill", color);
  
  // Transition exiting nodes to the parent's new position.
  node.exit().transition()
      .duration(duration)
      .attr("transform", function(d) { return "translate(" + source.y + "," + source.x + ")"; })
      .style("opacity", 1e-6)
      .remove();
  
  // Update the links
  var link = vis.selectAll("path.link")
      .data(tree.links(nodes), function(d) { return d.target.id; });
  
  // Enter any new links at the parent's previous position.
  link.enter().insert("svg:path", "g")
      .attr("class", "link")
      .attr("d", function(d) {
        var o = {x: source.x0, y: source.y0};
        return diagonal({source: o, target: o});
      })
    .transition()
      .duration(duration)
      .attr("d", diagonal);
  
  // Transition links to their new position.
  link.transition()
      .duration(duration)
      .attr("d", diagonal);
  
  // Transition exiting nodes to the parent's new position.
  link.exit().transition()
      .duration(duration)
      .attr("d", function(d) {
        var o = {x: source.x, y: source.y};
        return diagonal({source: o, target: o});
      })
      .remove();
  
  // Stash the old positions for transition.
  nodes.forEach(function(d) {
    d.x0 = d.x;
    d.y0 = d.y;
  });
}

// Toggle children on click.
function click(d) {
  $("#info").html(d.name+" "+d.size+" "+d.popo);
  if (d.children) {
    d._children = d.children;
    d.children = null;
  } else {
    d.children = d._children;
    d._children = null;
  }
  update(d);
}

function color(d) {
  return d._children ? "#3182bd" : d.children ? "#c6dbef" : "#fd8d3c";
}

    </script>
	</div>
	
	<div class="container" style="width:50%;float:right">
		<!--div class="column span-24" style="width:100%">
			<div class="resourcebox owl_UI" data-jowl="owl:Ontology" id="title" style="min-height:50px;">
				<h2 class="propertybox title" data-jowl="rdfs:label">${rdfs:label}</h2>
				<div class="propertybox owl_UI_content" data-jowl="rdfs:comment">${rdfs:comment}</div>
			</div>
			<hr class="space"/><hr />
		</div-->
		<div class="column span-24" style="width:100%">
		<div id="tabs">
			<!--ul>
				<li><a href="#tab1">Classes</a></li>
				<!--li id="propertyPanel"><a href="#tab2">Properties</a></li>
				<li id="individualPanel"><a href="#tab3">Individuals</a></li>
				<li id="sparqldlPanel"><a href="#tab4">SPARQL-DL</a></li>
			</ul-->
			<div id="tab1">
					<div id="classlist"></div>
					<hr class="space"/>
					<div id="conceptwidget">
						<form action="">
							Treeview: <input type="radio" name="visualisation" value="treeview" checked="checked"/>
							Navigation Bar: <input type="radio" name="visualisation" value="navbar"/>
						</form>
						<table id="browser" style="width:100%"><tr>
							<td style="width:50%;">
								<div id="treeview" class="ui-widget-content">
									<h4 class="ui-dialog-titlebar ui-state-default">Treeview</h4>
								</div>
								<div id="navbar" style="display:none" class="ui-widget-content">
									<h4 class="ui-dialog-titlebar ui-state-default">Navbar</h4>
								</div>
								Rechercher un verbe: 
								<input id="owlauto" type="text" size="40" style="display:block;width:99%;margin:5px 0px;" title="enter a search term"/>
								<div style="color:#DCDCDC" class="info"></div>
							</td>
							<td>
								<div id="description" class="resourcebox ui-widget-content" data-jowl="owl:Class">
									<h4 class="ui-dialog-titlebar  ui-state-default propertybox" data-jowl="rdfs:label">Description of <span>${rdfs:label}</span></h4>
									<div class="jowl-content">
										<div class="propertybox" data-jowl="rdfs:comment">${rdfs:comment}</div>
										<div class="propertybox">
											<b>Terms</b>: <span data-jowl="term">${term}</span>
										</div>
										<div class="propertybox" id="disjoints">
											<b>Disjoint With</b>: <span data-jowl="owl:disjointWith">${owl:disjointWith}</span>
										</div>
										<div class="propertybox">
											<b>Relations</b> 
											<ul>
												<li data-jowl="sparql-dl:PropertyValue(owl:Class, ?p, ?t)">
													<span>${?p}</span><span>: </span><span>${?t}</span>
												</li>
											</ul>
										</div>
										<div id="individualsPropertyBox" class="propertybox" style="padding:5px;">
											<b>Instances</b><br/>
											<span class="valuebox" data-jowl="sparql-dl:DirectType(?i, owl:Class)">${?i}</span>
										</div>
									</div>
								</div>
							</td>
						</tr></table>
					</div>
			</div>
			<!--div id="tab2">
				<div>
					<p>
						<b>ObjectProperties</b>
						<div id="OPlist"></div>
					</p>
					<p>
						<b>DatatypeProperties</b>
						<div id="DPlist"></div>
					</p>
				</div>
				<hr class="space"/>
				<div id="propertywidget">
					<div class="resourcebox ui-widget-content" data-jowl="rdf:Property">
						<h4 class="ui-dialog-titlebar ui-state-default propertybox" data-jowl="rdfs:label">Description of <span>${rdfs:label}</span></h4>
						<div class="jowl-content">
							<div class="propertybox" data-jowl="rdfs:comment">${rdfs:comment}</div>
							<div class="propertybox">
								<b>Terms</b>: <span data-jowl="term">${term}</span>
							</div>
							<div class="propertybox">
								<b>Domain</b>: <span data-jowl="rdfs:domain">${rdfs:domain}</span>
							</div>
							<div class="propertybox">
								<b>Range</b>: <span data-jowl="rdfs:range">${rdfs:range}</span>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div id="tab3">
				<div id="thinglist"></div>
				<hr class="space"/>
				<div id="thingwidget">
					<div class="resourcebox ui-widget-content" data-jowl="owl:Thing">
						<h4 class="ui-dialog-titlebar ui-state-default propertybox" data-jowl="rdfs:label">Description of <span>${rdfs:label}</span></h4>			
						<div class="jowl-content">
							<div class="propertybox" style="margin-bottom:5px"><b>owl:Class</b> <span data-jowl="rdf:type">${rdf:type}</span></div>
							<div class="propertybox" data-jowl="rdfs:comment">${rdfs:comment}</div>
							<div class="propertybox" data-jowl="sparql-dl:PropertyValue(owl:Thing, ?p, ?t)">	
								<span class="alt">${?p}</span><span>: </span><span>${?t}</span>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div id="tab4">
				<h4>Enter a query:</h4>
				<form id="sparql"><input type="text" size="100"/></form>
				<hr class="space"/>
				<table style="width:100%"><tr>
				<td style="width:50%;">
					<h3>Results</h3>
					<div class="loader hide" >
						<div style="color:black">Querying, Please Stand By</div>
						<img src="http://ontologyonline.org/img/ajax-loader.gif" alt="Loading Image"/>
					</div>
					<div id="sparqlresults" class="box"></div>
				</td>
				<td>
					<h3>Syntax</h3>
					<ul>
						<li>Type(?a, ?b)</li>
						<li>PropertyValue(?a, ?b, ?c)</li>
						<li>Class(?a)</li>
						<li>ObjectProperty(?a)</li>
						<li>DatatypeProperty(?a)</li>
					</ul>
					Examples: see <a href="http://jowl.ontologyonline.org/SPARQL-DL.html">jOWL SPARQL-DL Test Suite page</a>
				</td>
				</tr></table>
			</div-->
		</div>
		</div>
			
		<!--hr class="space"/><hr />
		<div class="column span-24">
			<p>Powered by <a href="http://jowl.ontologyonline.org" title="jOWL" style="font-size:large">jOWL</a>, semantic javascript library.<br/>
			Created by <a href="http://ontologyonline.org/DavidDecraene.html" style="text-decoration:none;">David Decraene</a>.</p>
			<p><a href="http://ontologyonline.org" style="text-decoration:none;">OntologyOnline.org</a></p>
		</div-->		
	</div>
	</body>
</html>
